(defvar eww "$HOME/.local/bin/eww -c $HOME/.config/eww/vbar")

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;							Widget Section's							 ;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Launcher Widgets ;;
(defwidget launcher []
  (box :orientation "v"
    :space-evenly "false"
    :spacing -15
    (button :class "launcher_icon"
    :onclick "scripts/popup launcher"  "")))

;; Workspaces Widgets ;;
(defwidget workspaces []
  (literal :content workspace))
(defpoll workspace :interval "1ms" "scripts/workspace")

;; Battery Widgets ;;
(defwidget bat []
  (box	:orientation "v"
    :space-evenly "false"
    (label	:class "bat"
      :halign "end"
      :text battery
    :tooltip "Battery: ${battery-cappacity}%")))
(defpoll battery			:interval "1s"	"scripts/battery icon")
(defpoll battery-cappacity	:interval "1s"	"scripts/battery percent")

;; Wifi Widgets ;;
(defwidget wifi []
  (box		:orientation "v"
    :tooltip wifi-name
    (button		:onclick "scripts/popup wifi"
    :class "wifi-icon" wifi-icon)))
(defpoll wifi-icon :interval "1s" "scripts/wifi icon")
(defpoll wifi-name :interval "1s" "scripts/wifi name")

;; Brightness Widgets ;;
(defwidget bright []
  (eventbox :onhover "${eww} update bright=true"
    :onhoverlost "${eww} update bright=false"
    (box    :orientation "v"
      :space-evenly "false"
      :spacing 2
      (revealer :transition "slideup"
        :reveal bright
        :duration "550ms"
        (scale :class "bribar"
          :value current-brightness
          :tooltip "Brightness: ${current-brightness}%"
          :onchange "brightnessctl set {}%"
          :orientation "v"
          :flipped true
          :max 101
        :min 0))
      (label :class "brightness-icon"
      :text ""))))
(defpoll current-brightness :interval "1s" "brightnessctl -m -d amdgpu_bl0 | awk -F, '{print substr($4, 0, length($4)-1)}' | tr -d '%'")
(defvar bright false)

;; Volume Widgets ;;
(defwidget volum []
  (eventbox :onhover "${eww} update volum=true"
    :onhoverlost "${eww} update volum=false"
    (box      :orientation "v"
      :space-evenly "false"
      :spacing "2"
      (revealer :transition "slideup"
        :reveal volum
        :duration "550ms"
        (scale    :class "volbar"
          :value current-volume
          :orientation "v"
          :flipped true
          :tooltip "Volume: ${current-volume}%"
          :max 101
          :min 0
        :onchange "amixer -D pulse sset Master {}%" ))
      (button   :onclick "scripts/popup audio"   :class "volume-icon" "墳"))))
(defpoll current-volume :interval "1s" "amixer -D pulse sget Master | grep 'Left:' | awk -F'[][]' '{ print $2 }' | tr -d '%'")
(defvar volum false)

;; Control Panel Widgets ;;
(defwidget control []
  (box :orientation "v"
    :space-evenly false
    :class "control"
    (bat)
    (wifi)
    (bright)
    (volum)))

;; Clock Widgets ;;
(defwidget time []
  (box	:orientation "v"
    :class "time"
    :valign "end"
    (button	:onclick "scripts/popup calendar"
    :class "time-hour" hour)
    (button	:onclick "scripts/popup calendar"
    :class "time-min"  min)))
(defpoll hour	:interval "1s"	"date '+%H'")
(defpoll min	:interval "1s"	"date '+%M'")

;; Calendar Widgets ;;
(defwidget cal []
  (box :class "cal-box"
    :orientation "v"
    (box :class "cal-inner-box"
      (calendar :class "cal"
        :day calendar_day
        :month calendar_month
      :year calendar_year))))
(defpoll calendar_day :interval "10h"
"date '+%d'")
(defpoll calendar_month :interval "10h"
"scripts/calendar")
(defpoll calendar_year :interval "10h"
"date '+%Y'")

;; Powermenu Widgets ;;
(defwidget power []
  (eventbox	:onhover "${eww} update power=true"
    :onhoverlost "${eww} update power=false"
    (box		:orientation "v"
      :space-evenly "false"
      :vexpand "false"
      :class "powermenu"
      (revealer	:transition "slideup"
        :reveal power
        :duration "550ms"
        (box		:orientation "v"
          :space-evenly "false"

          (button   	:class "button-reconf"
            :tooltip "Restart"
          :onclick "openbox --restart" "" )

          (button		:class "button-reb"
            :tooltip "Reboot"
          :onclick "reboot"	"ﰇ")

          (button		:class "button-quit"
            :tooltip "Logout"
          :onclick "openbox --exit" "﫼")

          (button		:class "button-lock"
            :tooltip "Lock Screen"
          :onclick "betterlockscreen -l"	"")))

      (button		:class "button-off"
        :tooltip "Shutdown"
      :onclick "shutdown now"	""))))
(defvar power false)

;; Top Widgets ;;
(defwidget top []
  (box	:orientation "v"
    :space-evenly "false"
    :valign "start"
    (launcher)
    (workspaces)))

;; Bottom Widgets ;;
(defwidget bottom []
  (box	:orientation "v"
    :space-evenly false
    (time)
    (power)))

;; End Widgets ;;
(defwidget end []
  (box :orientation "v"
    :space-evenly "false"
    :valign "end"
    :spacing 5
    (control)
    (bottom)))

;; Bar Widgets ;;
(defwidget bar []
  (box :class "eww_bar"
    :orientation "v"
    :vexpand "false"
    :hexpand "false"
    (top)
    (end)))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;							Window Section's							 ;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Bar Windows ;;
(defwindow bar
  :geometry (geometry :x "0"
    :y "0"
    :height "100%"
  :width "45px")
  :monitor 0
  :reserve (struts :distance "45px"
  :side "left")
  :wm-ignore false
  :hexpand "false"
  :vexpand "false"
  (bar))

;; Calendar Windows ;;
(defwindow calendar
  :geometry (geometry :x "50px"
    :y "70%"
    :width "270px"
  :height "60px")
  (cal))





